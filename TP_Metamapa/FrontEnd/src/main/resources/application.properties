spring.application.name=FrontEnd
server.port=8088

# Carpeta donde se guardarán las imágenes subidas (relativa a la raíz del proyecto)
file.upload-dir=./src/main/resources/static/images/hechos
# URL base para acceder a esas imágenes
file.upload-url=/images/hechos/

backend.api.url=http://localhost:8089
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/Metamapa
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/auth/realms/Metamapa
# 1. Configuración del Servidor de Autorización (Keycloak)
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/Metamapa/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/Metamapa/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/Metamapa/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/Metamapa/protocol/openid-connect/certs

# 2. Configuración de su Aplicación como Cliente (Client Registration)
spring.security.oauth2.client.registration.keycloak.client-id= metamapa-api
spring.security.oauth2.client.registration.keycloak.client-secret= metamapa
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8088/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email
spring.security.oauth2.client.registration.keycloak.provider=keycloak